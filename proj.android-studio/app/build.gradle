apply plugin: 'com.android.application'

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        applicationId "com.oke_ya.pudding"
        minSdkVersion 10
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }

    sourceSets.main {
        java.srcDir "src"
        res.srcDir "res"
        jniLibs.srcDir "libs"
        manifest.srcFile "AndroidManifest.xml"
        assets.srcDir "assets"
    }

    signingConfigs {

       release {
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                signingConfig signingConfigs.release
            }
        }
    }

    def cpu_num = { Runtime.getRuntime().availableProcessors() }

    task compileDebugJavaWithJavacNDK(type:Exec) {
        commandLine 'ndk-build', "-j${cpu_num()}", "NDK_DEBUG=1"
    }

    task compileReleaseJavaWithJavacNDK(type:Exec) {
        commandLine 'ndk-build', "-j${cpu_num()}", "NDK_DEBUG=0"
    }

    tasks.withType(JavaCompile) {
      compileTask -> compileTask.dependsOn "${compileTask.name}NDK"
    }

    task ndkClean(type:Exec) {
        commandLine 'ndk-build', 'clean'
    }

    clean.dependsOn 'ndkClean'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':libcocos2dx')
}
